/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT     0
// #define D_DVORAK  1
#define RAISE       1
#define RAISE_EXT   2
#define NAV         3
#define FUNC        4


#define GAMING_LAYOUT(KEYS) \
GAMING_LAYOUT_EXPANDED(KEYS)

#define GAMING_LAYOUT_EXPANDED( \
    K01, K02, K03, K04, K05, K06, K07, K08, K09, K10, \
    K11, K12, K13, K14, K15, K16, K17, K18, K19, K20, \
    K21, K22, K23, K24, K25, K26, K27, K28, K29, K30  \
) \
< \
    &none &kp K01   &kp K02     &kp K03     &kp K04     &kp K05             &kp K06     &kp K07     &kp K08     &kp K09     &kp K10     &none \
    &none &kp K11   &kp K12     &kp K13     &kp K14     &kp K15             &kp K16     &kp K17     &kp K18     &kp K19     &kp K20     &none \
    &none &kp K21   &kp K22     &kp K23     &kp K24     &kp K25             &kp K26     &kp K27     &kp K28     &kp K29     &kp K30     &none \
                                &kp TAB     &kp SPACE   &mo RAISE           &kp BSPC    &kp RET     &kp DEL \
>


#define BASE_LAYOUT(KEYS) \
BASE_LAYOUT_EXPANDED(KEYS)

#define BASE_LAYOUT_EXPANDED( \
    K01, K02, K03, K04, K05, K06, K07, K08, K09, K10, \
    K11, K12, K13, K14, K15, K16, K17, K18, K19, K20, \
    K21, K22, K23, K24, K25, K26, K27, K28, K29, K30  \
) \
< \
    &none &kp K01       &kp K02         &kp K03         &kp K04         &kp K05             &kp K06     &kp K07         &kp K08         &kp K09         &kp K10         &none \
    &none &hm LSHFT K11 &hm LCTRL K12   &hm LALT K13    &hm LGUI K14    &kp K15             &kp K16     &hm RGUI K17    &hm RALT K18    &hm RCTRL K19   &hm RSHFT K20   &none \
    &none &kp K21       &kp K22         &kp K23         &kp K24         &kp K25             &kp K26     &kp K27         &kp K28         &kp K29         &kp K30         &none \
                                        &kp LSHFT       &kp SPACE       &mo RAISE           &kp BSPC    &key_repeat     &kp RET \
>

#define QWERTY_KEYS \
    Q,       W,       E,       R,       T,           Y,       U,       I,       O,       P,    \
    A,       S,       D,       F,       G,           H,       J,       K,       L,       SEMI, \
    Z,       X,       C,       V,       B,           N,       M,       COMMA,   DOT,     FSLH 

#define DVORAK_KEYS \
    SEMI,    COMMA,   DOT,     P,       Y,           F,       G,       C,       R,       L, \
    A,       O,       E,       U,       I,           D,       H,       T,       N,       S, \
    SQT,     Q,       J,       K,       X,           B,       M,       W,       V,       Z 


/ {

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            require-prior-idle-ms = <50>;
            retro-tap;
            hold-while-undecided;
            bindings = <&kp>, <&kp>;
        };
    };


    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <100>;
            // IMPORTANT I am stupid and have 6 col config for 5 col!!
            key-positions = <13 14 21 22>;
            bindings = <&tog DEFAULT>;
        };
    };

	keymap {
        compatible = "zmk,keymap";

        default {
            bindings = BASE_LAYOUT( DVORAK_KEYS );
        };

        // temporary active, only when button pressed
        raise {
            bindings = <
                &none &kp ESC       &kp AT      &kp LA(N3)  &kp DLLR    &kp PRCNT       &kp CARET       &kp AMPS        &kp ASTRK       &kp SEMI        &tog FUNC &none
                &none &kp PLUS      &kp EQUAL   &kp FSLH    &kp MINUS   &kp SQT         &kp BSLH        &kp LS(LBKT)    &kp LS(RBKT)    &kp LS(BSLH)    &trans    &none
                &none &kp TILDE     &kp LA(N2)  &kp QMARK   &kp UNDER   &kp DQT         &kp LBKT        &kp LPAR        &kp RPAR        &kp RBKT        &tog NAV  &none
                                                &none       &none       &none           &kp RET         &tog RAISE_EXT  &kp DEL
            >;
        };
        
        // toggled
        raise_ext {
            bindings = <
                &none   &trans      &trans      &trans      &trans      &trans              &kp PLUS    &kp KP_N7   &kp KP_N8   &kp KP_N9   &trans    &none
                &none   &trans      &trans      &trans      &trans      &trans              &kp MINUS   &kp KP_N4   &kp KP_N5   &kp KP_N6   &trans    &none
                &none   &trans      &trans      &trans      &trans      &trans              &kp EQUAL   &kp KP_N1   &kp KP_N2   &kp KP_N3   &trans    &none
                                                &trans      &trans      &trans              &trans      &trans      &kp KP_N0
            >;
        };

        // toggled
        nav {
            bindings = <
                &none   &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans    &none
                &none   &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans    &none
                &none   &trans      &trans      &trans      &trans      &trans              &trans      &trans      &trans      &trans      &trans    &none
                                                &trans      &trans      &trans              &trans      &trans      &trans
            >;
        };

        // toggled
        func {
            bindings = <
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                                        &none   &none   &none           &none   &none   &none
            >;
        };

        empty {
            bindings = <
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                &none   &none   &none   &none   &none   &none           &none   &none   &none   &none   &none   &none
                                        &none   &none   &none           &none   &none   &none
            >;
        };
    };
};
