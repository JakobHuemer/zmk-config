/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


#define DEFAULT     0
#define RAISE       1
#define NUM         2
#define NAV         3
#define FUNC        4
#define KEYBOARD    5

#define XXX &none
#define ___ &trans


// other keys rebound on my mac
#define GLOBE CAPS;
#define GLB CAPS;


#include "includes/macros.dtsi"


/{ 
    chosen {
        zmk,matrix_transform = &five_column_transform;
    };
};

/ {

    behaviors {

        ZMK_HOMEROW_BINDINGS(hm, &kp, &kp)
        ZMK_HOMEROW_BINDINGS(hl, &mo, &kp)

        // ZMK_HOMEROW_BINDINGS(hm_ae_la,  &kp,    &u_ae)
        ZMK_HOMEROW_BINDINGS(krl,       &mo,    &key_repeat)
        
        ZMK_MOD_MORPH_S(sqt_under,  &kp SQT,    &kp UNDER)
        ZMK_MOD_MORPH_S(minus_dqt,  &kp MINUS,  &kp DQT)
        ZMK_MOD_MORPH_S(do_co,      &kp DOT,    &kp COLON)
        ZMK_MOD_MORPH_S(co_se,      &kp COMMA,  &kp SEMI)
        ZMK_MOD_MORPH_S(gresc_,     &kp ESC,    &kp GRAVE)

        ZMK_MOD_MORPH_S(lbr, &kp LS(LBKT), &kp LS(COMMA))
        ZMK_MOD_MORPH_S(rbr, &kp LS(RBKT), &kp LS(DOT))
        

    };

    combos {
        compatible = "zmk,combos";
        combo_caps_aka_globe {
            timeout-ms = <50>;
            key-positions = <10 19>;
            bindings = <&kp CAPS>;
        };
    };


    macros {


        
        dl: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LG(RIGHT)>
                , <&macro_tap &kp LG(BSPC)>
                ;
        };

        
    };


	keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
                /*                                                                          ' _                */
                &kp B       &kp L           &kp D           &kp W           &kp Z               &sqt_under      &kp F               &kp O               &kp U           &kp J
                &kp N       &hm LCTRL R     &hm LALT T      &hm LGUI S      &kp G               &kp Y           &hm LGUI H          &hm LALT A          &hm RCTRL E     &kp I
                /*                                                                                                                  . :                 - "             , ;      */
                &kp Q       &kp X           &kp M           &kp C           &kp V               &kp K           &kp P               &do_co              &minus_dqt      &co_se
                                            &kp LSHFT       &hl NAV SPACE   &mo RAISE           &kp BSPC        &key_repeat         &tog NUM
            >;
        };

        raise {
            bindings = <
                /* Grave Escape  @      #           $           %                       ^           &               *           ;               TO FUNC      */
                &gresc_     &kp AT      &kp LA(N3)  &kp DLLR    &kp PRCNT               &kp CARET   &kp AMPS        &kp STAR    &kp SEMI        &tog FUNC
                /* +        =           /           ¨ for öäü   :                       \           { <             } >         |               DEL         */
                &kp TAB     &kp EQUAL   &kp FSLH    &kp LA(U)   &kp COLON               &kp BSLH    &lbr            &rbr        &kp LS(BSLH)    &kp DEL
                /*  ~       €           ?           !           ß                       [           (               )           ]               TO NAV      */
                &kp TILDE   &kp LA(N2)  &kp QMARK   &kp EXCL    &kp LA(S)               &kp LBKT    &kp LPAR        &kp RPAR    &kp RBKT        &tog NAV
                                        XXX         XXX         XXX                     &kp RET     &kp RSHFT       &tog NUM        
            >;
        };
        
        // toggled
        num {
            bindings = <
                ___         ___         &kp COMMA   &kp DOT     ___                 &kp PLUS        &kp KP_N7       &kp KP_N8   &kp KP_N9   &kp STAR
                &kp PLUS    &kp MINUS   &kp STAR    &kp FSLH    ___                 &kp MINUS       &kp KP_N4       &kp KP_N5   &kp KP_N6   &kp FSLH
                ___         ___         ___         &kp EQUAL   ___                 &kp EQUAL       &kp KP_N1       &kp KP_N2   &kp KP_N3   ___
                                        ___         ___         &to DEFAULT         &kp BSPC        &tog NUM        &kp KP_N0
            >;
        };

        // toggled
        nav {
            bindings = <
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5              &kp F6      &kp F7              &kp F8          &kp F9          &kp F10
                &kp F11     &kp LCTRL   &kp LALT    &kp LGUI    &kp F12             ___         &kp LEFT            &kp DOWN        &kp UP          &kp RIGHT
                ___         ___         ___         &kp CAPS    ___                 ___         &kp HOME            &kp PG_DN       &kp PG_UP       &kp END
                                        ___         ___         &to DEFAULT         ___         &kp LG(LS(RETURN))  &tog NAV
            >;
        };

        // toggled
        func {
            bindings = <
                &kp F1  &kp F2  &kp F3  &kp F4   XXX                XXX     &kp F13 &kp F14 &kp F15 &kp F16
                &kp F5  &kp F6  &kp F7  &kp F8   XXX                XXX     &kp F17 &kp F18 &kp F19 &kp F20
                &kp F9  &kp F10 &kp F11 &kp F12  XXX                XXX     &kp F21 &kp F22 &kp F23 &kp F24
                                XXX     XXX      &to DEFAULT        XXX     XXX     XXX  
            >;
        };

        keyboard {
            bindings = <
                XXX     XXX     XXX     XXX     XXX                     XXX     XXX             &bt BT_PRV      &bt BT_NXT      XXX
                XXX     XXX     XXX     XXX     &bt BT_CLR              XXX     &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3
                XXX     XXX     XXX     XXX     &bt BT_CLR_ALL          XXX     &bt BT_DISC 0   &bt BT_DISC 1   &bt BT_DISC 2   &bt BT_DISC 3
                                XXX     XXX     &to DEFAULT             XXX     XXX             XXX
            >;
        };

        empty {
            bindings = <
                XXX     XXX     XXX     XXX     XXX             XXX     XXX     XXX     XXX     XXX
                XXX     XXX     XXX     XXX     XXX             XXX     XXX     XXX     XXX     XXX
                XXX     XXX     XXX     XXX     XXX             XXX     XXX     XXX     XXX     XXX
                                XXX     XXX     XXX             XXX     XXX     XXX  
            >;
        };
    };
};
